{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from \"axios\";\nimport { API_URL, API_URL2 } from \"../http\";\nexport default class Store {\n  // ДОДЕЛАТЬ АДМИНКУ\n\n  constructor() {\n    this.user = {};\n    this.isAuth = true;\n    this.isLoading = false;\n    this.isNotValidate = \"\";\n    this.hasChellenge = false;\n    this.userChellenge = [];\n    // isAddChellenge = false;\n    this.isAdmin = false;\n    makeAutoObservable(this);\n  }\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setLoading(bool) {\n    this.isLoading = bool;\n  }\n  setIsNotValidate(message) {\n    this.isNotValidate = message;\n  }\n  setUserChellenge(message) {\n    this.userChellenge = message;\n  }\n  setHasChellenge(bool) {\n    this.hasChellenge = bool;\n  }\n  setIsAddChellenge(bool) {\n    this.isAddChellenge = bool;\n  }\n  async login(username, password) {\n    try {\n      const response = await AuthService.login(username, password);\n      console.log(\"RESPONSE:\", response);\n      localStorage.setItem('tokenA', response.data.accessToken);\n      localStorage.setItem('tokenR', response.data.refreshToken);\n      localStorage.setItem('id', response.data.id);\n      this.setAuth(true);\n      this.setUser(response.data);\n    } catch (e) {\n      console.log(\"Ошибка при авторизации:\", e);\n      if (e.response) {\n        console.log(\"Ответ сервера:\", e.response);\n        console.log(\"Сообщение об ошибке:\", e.response.data ? e.response.data.message : 'Нет сообщения');\n      } else {\n        console.log(\"Ошибка сети или сервер не отвечает:\", e.message);\n      }\n    }\n  }\n  async registration(name, username, password, passwordConfirmation) {\n    try {\n      console.log(`name ${name}\\nusername ${username} \\npassword ${password}passwordConf ${passwordConfirmation}`);\n      const response = await AuthService.registration(name, username, password, passwordConfirmation);\n      console.log(response.data);\n      await this.login(username, password);\n    } catch (e) {\n      var _e$response, _e$response2;\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data.errors);\n      const errors = (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data.errors;\n      if (errors) {\n        Object.keys(errors).forEach(key => {\n          console.log(`${errors[key]}`);\n          this.setIsNotValidate(`${errors[key]}`);\n        });\n      } else {\n        console.log(\"Нет ошибок.\");\n      }\n    }\n  }\n  async logout() {\n    try {\n      localStorage.removeItem('tokenA');\n      localStorage.removeItem('tokenR');\n      this.setAuth(false);\n      this.setUser({});\n      console.log(\"ВСЕ четко вышло\");\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n    }\n  }\n  async checkAuth() {\n    this.setLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/refresh`, {\n        refreshToken: localStorage.getItem('tokenR')\n      });\n      console.log(response);\n      localStorage.setItem('tokenA', response.data.accessToken);\n      localStorage.setItem('tokenR', response.data.refreshToken);\n      this.setAuth(true);\n    } catch (e) {\n      var _e$response4, _e$response4$data;\n      console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  cachedUser() {\n    console.log(localStorage.getItem('user'));\n    const cachedUserData = JSON.parse(localStorage.getItem('user'));\n    this.setUser(cachedUserData);\n    this.setAuth(true);\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  async challenges(id) {\n    try {\n      const accessToken = localStorage.getItem('tokenA');\n      const response = await axios.get(`${API_URL2}/challenges/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      this.setHasChellenge(true);\n      this.setUserChellenge(response.data);\n    } catch (e) {\n      var _e$response5, _e$response5$data;\n      console.log(((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : (_e$response5$data = _e$response5.data) === null || _e$response5$data === void 0 ? void 0 : _e$response5$data.message) || 'Произошла ошибка при получении данных');\n    }\n  }\n  async getChellenge(id, Data) {\n    try {\n      const accessToken = localStorage.getItem('tokenA');\n      const response = await axios.post('api/v1/challenges', {\n        dateFrom: Data.from,\n        dateTo: Data.to\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      this.setHasChellenge(true);\n      this.setUserChellenge(response.data);\n      console.log(\"Данные успешно обновлены:\", response.data);\n    } catch (e) {\n      var _e$response6, _e$response6$data;\n      console.log(((_e$response6 = e.response) === null || _e$response6 === void 0 ? void 0 : (_e$response6$data = _e$response6.data) === null || _e$response6$data === void 0 ? void 0 : _e$response6$data.message) || 'Произошла ошибка при получении данных');\n    }\n  }\n  async getUserInfo(id) {\n    try {\n      const accessToken = localStorage.getItem('tokenA');\n      const response = await axios.get(`${API_URL2}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      this.setUser(response.data);\n      console.log(response.data);\n    } catch (e) {\n      var _e$response7, _e$response7$data;\n      console.log(((_e$response7 = e.response) === null || _e$response7 === void 0 ? void 0 : (_e$response7$data = _e$response7.data) === null || _e$response7$data === void 0 ? void 0 : _e$response7$data.message) || 'Произошла ошибка при получении данных');\n    }\n  }\n  async editUserInfo(id, userData) {\n    try {\n      const accessToken = localStorage.getItem('tokenA');\n      const response = await axios.post(`${API_URL2}/edit/${id}`, {\n        name: userData.name,\n        username: userData.username,\n        goals: userData.goals,\n        age: parseInt(userData.age, 10),\n        description: userData.description,\n        sex: userData.sex\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      this.setUser(response.data);\n      console.log(\"Данные успешно обновлены:\", response.data);\n    } catch (e) {\n      var _e$response8, _e$response8$data;\n      console.log(((_e$response8 = e.response) === null || _e$response8 === void 0 ? void 0 : (_e$response8$data = _e$response8.data) === null || _e$response8$data === void 0 ? void 0 : _e$response8$data.message) || 'Произошла ошибка при получении данных');\n    }\n  }\n  async addChellengeToUser(userId, challengeId) {\n    try {\n      console.log(parseInt(userId, 10), challengeId);\n      const accessToken = localStorage.getItem('tokenA');\n      const response = await axios.post(`${API_URL2}/remove/challenge`, {\n        userId: parseInt(userId, 10),\n        challengeId\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log(\"ВСЁ ЧЁТКО, ЗАПРОСЫ ХИХИХИ\", response.data);\n    } catch (e) {\n      var _e$response9, _e$response9$data;\n      console.log(((_e$response9 = e.response) === null || _e$response9 === void 0 ? void 0 : (_e$response9$data = _e$response9.data) === null || _e$response9$data === void 0 ? void 0 : _e$response9$data.message) || 'Произошла ошибка при получении данных');\n    }\n  }\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","axios","API_URL","API_URL2","Store","constructor","user","isAuth","isLoading","isNotValidate","hasChellenge","userChellenge","isAdmin","setAuth","bool","setUser","setLoading","setIsNotValidate","message","setUserChellenge","setHasChellenge","setIsAddChellenge","isAddChellenge","login","username","password","response","console","log","localStorage","setItem","data","accessToken","refreshToken","id","e","registration","name","passwordConfirmation","_e$response","_e$response2","errors","Object","keys","forEach","key","logout","removeItem","_e$response3","_e$response3$data","checkAuth","post","getItem","_e$response4","_e$response4$data","cachedUser","cachedUserData","JSON","parse","challenges","get","headers","Authorization","_e$response5","_e$response5$data","getChellenge","Data","dateFrom","from","dateTo","to","_e$response6","_e$response6$data","getUserInfo","_e$response7","_e$response7$data","editUserInfo","userData","goals","age","parseInt","description","sex","_e$response8","_e$response8$data","addChellengeToUser","userId","challengeId","_e$response9","_e$response9$data"],"sources":["/Users/melevate/Desktop/Hackaton2024/src/API/store/store.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from \"axios\";\nimport {API_URL, API_URL2} from \"../http\";\n\nexport default class Store {\n    user = {};\n    isAuth = true;\n    isLoading = false;\n    isNotValidate =\"\";\n    hasChellenge= false;\n    userChellenge =[]\n    // isAddChellenge = false;\n    isAdmin = false;\n    // ДОДЕЛАТЬ АДМИНКУ\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool) {\n        this.isAuth = bool;\n    }\n\n    setUser(user) {\n        this.user = user;\n    }\n\n\n    setLoading(bool) {\n        this.isLoading = bool;\n    }\n\n    setIsNotValidate(message) {\n        this.isNotValidate = message;\n    }\n\n    setUserChellenge(message) {\n        this.userChellenge = message;\n    }\n\n    setHasChellenge(bool) {\n        this.hasChellenge = bool;\n    }\n\n    setIsAddChellenge(bool) {\n        this.isAddChellenge = bool;\n    }\n\n\n    async login(username, password) {\n        try {\n            const response = await AuthService.login(username, password);\n            console.log(\"RESPONSE:\", response);\n            localStorage.setItem('tokenA', response.data.accessToken);\n            localStorage.setItem('tokenR', response.data.refreshToken);\n            localStorage.setItem('id', response.data.id);\n\n            this.setAuth(true);\n            this.setUser(response.data);\n        } catch (e) {\n            console.log(\"Ошибка при авторизации:\", e);\n            if (e.response) {\n                console.log(\"Ответ сервера:\", e.response);\n                console.log(\"Сообщение об ошибке:\", e.response.data ? e.response.data.message : 'Нет сообщения');\n            } else {\n                console.log(\"Ошибка сети или сервер не отвечает:\", e.message);\n            }\n        }\n    }\n\n\n    async registration(name, username, password, passwordConfirmation) {\n        try {\n            console.log(`name ${name}\\nusername ${username} \\npassword ${password}passwordConf ${passwordConfirmation}`);\n            const response = await AuthService.registration(name, username, password, passwordConfirmation);\n\n            console.log(response.data);\n            await this.login(username, password);\n        } catch (e) {\n            console.log(e.response?.data.errors)\n            const errors = e.response?.data.errors;\n            if (errors) {\n                Object.keys(errors).forEach(key => {\n                    console.log(`${errors[key]}`);\n                    this.setIsNotValidate(`${errors[key]}`)\n\n                });\n            } else {\n                console.log(\"Нет ошибок.\");\n            }\n\n        }\n    }\n\n\n\n\n    async logout() {\n        try {\n            localStorage.removeItem('tokenA');\n            localStorage.removeItem('tokenR');\n            this.setAuth(false);\n            this.setUser({});\n            console.log(\"ВСЕ четко вышло\")\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.post(`${API_URL}/refresh`, {refreshToken: localStorage.getItem('tokenR')});\n            console.log(response);\n            localStorage.setItem('tokenA', response.data.accessToken);\n            localStorage.setItem('tokenR', response.data.refreshToken);\n            this.setAuth(true);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n\n    cachedUser() {\n        console.log(localStorage.getItem('user'))\n        const cachedUserData = JSON.parse(localStorage.getItem('user'))\n\n        this.setUser(cachedUserData)\n        this.setAuth(true);\n\n        return JSON.parse(localStorage.getItem('user'))\n    }\n\n    async challenges(id) {\n        try {\n            const accessToken = localStorage.getItem('tokenA');\n            const response = await axios.get(`${API_URL2}/challenges/${id}`, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`\n                }\n            });\n            this.setHasChellenge(true)\n            this.setUserChellenge(response.data);\n\n        } catch (e) {\n            console.log(e.response?.data?.message || 'Произошла ошибка при получении данных');\n        }\n    }\n\n    async getChellenge(id, Data) {\n        try {\n            const accessToken = localStorage.getItem('tokenA');\n            const response = await axios.post(\n                'api/v1/challenges',\n                {\n                    dateFrom: Data.from,\n                    dateTo: Data.to,\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                }\n            );\n            this.setHasChellenge(true)\n            this.setUserChellenge(response.data);\n            console.log(\"Данные успешно обновлены:\", response.data);\n        } catch (e) {\n            console.log(e.response?.data?.message || 'Произошла ошибка при получении данных');\n        }\n    }\n\n    async getUserInfo(id) {\n        try {\n            const accessToken = localStorage.getItem('tokenA');\n            const response = await axios.get(`${API_URL2}/${id}`, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`\n                }\n            });\n            this.setUser(response.data);\n            console.log(response.data);\n        } catch (e) {\n            console.log(e.response?.data?.message || 'Произошла ошибка при получении данных');\n        }\n    }\n\n    async editUserInfo(id, userData) {\n        try {\n            const accessToken = localStorage.getItem('tokenA');\n            const response = await axios.post(\n                `${API_URL2}/edit/${id}`,\n                {\n                    name: userData.name,\n                    username: userData.username,\n                    goals: userData.goals,\n                    age: parseInt(userData.age, 10),\n                    description: userData.description,\n                    sex: userData.sex\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                }\n            );\n            this.setUser(response.data);\n            console.log(\"Данные успешно обновлены:\", response.data);\n        } catch (e) {\n            console.log(e.response?.data?.message || 'Произошла ошибка при получении данных');\n        }\n    }\n\n\n    async addChellengeToUser(userId, challengeId) {\n        try {\n            console.log(parseInt(userId, 10), challengeId);\n\n            const accessToken = localStorage.getItem('tokenA');\n            const response = await axios.post(\n                `${API_URL2}/remove/challenge`,\n                { userId: parseInt(userId, 10), challengeId },\n                {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                }\n            );\n\n            console.log(\"ВСЁ ЧЁТКО, ЗАПРОСЫ ХИХИХИ\", response.data);\n        } catch (e) {\n            console.log(e.response?.data?.message || 'Произошла ошибка при получении данных');\n        }\n    }\n}\n\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,EAAEC,QAAQ,QAAO,SAAS;AAEzC,eAAe,MAAMC,KAAK,CAAC;EASvB;;EAEAC,WAAWA,CAAA,EAAG;IAAA,KAVdC,IAAI,GAAG,CAAC,CAAC;IAAA,KACTC,MAAM,GAAG,IAAI;IAAA,KACbC,SAAS,GAAG,KAAK;IAAA,KACjBC,aAAa,GAAE,EAAE;IAAA,KACjBC,YAAY,GAAE,KAAK;IAAA,KACnBC,aAAa,GAAE,EAAE;IACjB;IAAA,KACAC,OAAO,GAAG,KAAK;IAIXb,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAc,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACP,MAAM,GAAGO,IAAI;EACtB;EAEAC,OAAOA,CAACT,IAAI,EAAE;IACV,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB;EAGAU,UAAUA,CAACF,IAAI,EAAE;IACb,IAAI,CAACN,SAAS,GAAGM,IAAI;EACzB;EAEAG,gBAAgBA,CAACC,OAAO,EAAE;IACtB,IAAI,CAACT,aAAa,GAAGS,OAAO;EAChC;EAEAC,gBAAgBA,CAACD,OAAO,EAAE;IACtB,IAAI,CAACP,aAAa,GAAGO,OAAO;EAChC;EAEAE,eAAeA,CAACN,IAAI,EAAE;IAClB,IAAI,CAACJ,YAAY,GAAGI,IAAI;EAC5B;EAEAO,iBAAiBA,CAACP,IAAI,EAAE;IACpB,IAAI,CAACQ,cAAc,GAAGR,IAAI;EAC9B;EAGA,MAAMS,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM1B,WAAW,CAACuB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAC5DE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;MAClCG,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAAC;MACzDH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAACK,IAAI,CAACE,YAAY,CAAC;MAC1DJ,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEJ,QAAQ,CAACK,IAAI,CAACG,EAAE,CAAC;MAE5C,IAAI,CAACrB,OAAO,CAAC,IAAI,CAAC;MAClB,IAAI,CAACE,OAAO,CAACW,QAAQ,CAACK,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOI,CAAC,EAAE;MACRR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,CAAC,CAAC;MACzC,IAAIA,CAAC,CAACT,QAAQ,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEO,CAAC,CAACT,QAAQ,CAAC;QACzCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,CAAC,CAACT,QAAQ,CAACK,IAAI,GAAGI,CAAC,CAACT,QAAQ,CAACK,IAAI,CAACb,OAAO,GAAG,eAAe,CAAC;MACpG,CAAC,MAAM;QACHS,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEO,CAAC,CAACjB,OAAO,CAAC;MACjE;IACJ;EACJ;EAGA,MAAMkB,YAAYA,CAACC,IAAI,EAAEb,QAAQ,EAAEC,QAAQ,EAAEa,oBAAoB,EAAE;IAC/D,IAAI;MACAX,OAAO,CAACC,GAAG,CAAC,QAAQS,IAAI,cAAcb,QAAQ,eAAeC,QAAQ,gBAAgBa,oBAAoB,EAAE,CAAC;MAC5G,MAAMZ,QAAQ,GAAG,MAAM1B,WAAW,CAACoC,YAAY,CAACC,IAAI,EAAEb,QAAQ,EAAEC,QAAQ,EAAEa,oBAAoB,CAAC;MAE/FX,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACK,IAAI,CAAC;MAC1B,MAAM,IAAI,CAACR,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IACxC,CAAC,CAAC,OAAOU,CAAC,EAAE;MAAA,IAAAI,WAAA,EAAAC,YAAA;MACRb,OAAO,CAACC,GAAG,EAAAW,WAAA,GAACJ,CAAC,CAACT,QAAQ,cAAAa,WAAA,uBAAVA,WAAA,CAAYR,IAAI,CAACU,MAAM,CAAC;MACpC,MAAMA,MAAM,IAAAD,YAAA,GAAGL,CAAC,CAACT,QAAQ,cAAAc,YAAA,uBAAVA,YAAA,CAAYT,IAAI,CAACU,MAAM;MACtC,IAAIA,MAAM,EAAE;QACRC,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAACC,GAAG,IAAI;UAC/BlB,OAAO,CAACC,GAAG,CAAC,GAAGa,MAAM,CAACI,GAAG,CAAC,EAAE,CAAC;UAC7B,IAAI,CAAC5B,gBAAgB,CAAC,GAAGwB,MAAM,CAACI,GAAG,CAAC,EAAE,CAAC;QAE3C,CAAC,CAAC;MACN,CAAC,MAAM;QACHlB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC9B;IAEJ;EACJ;EAKA,MAAMkB,MAAMA,CAAA,EAAG;IACX,IAAI;MACAjB,YAAY,CAACkB,UAAU,CAAC,QAAQ,CAAC;MACjClB,YAAY,CAACkB,UAAU,CAAC,QAAQ,CAAC;MACjC,IAAI,CAAClC,OAAO,CAAC,KAAK,CAAC;MACnB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MAChBY,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOO,CAAC,EAAE;MAAA,IAAAa,YAAA,EAAAC,iBAAA;MACRtB,OAAO,CAACC,GAAG,EAAAoB,YAAA,GAACb,CAAC,CAACT,QAAQ,cAAAsB,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYjB,IAAI,cAAAkB,iBAAA,uBAAhBA,iBAAA,CAAkB/B,OAAO,CAAC;IAC1C;EACJ;EAEA,MAAMgC,SAASA,CAAA,EAAG;IACd,IAAI,CAAClC,UAAU,CAAC,IAAI,CAAC;IACrB,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMzB,KAAK,CAACkD,IAAI,CAAC,GAAGjD,OAAO,UAAU,EAAE;QAAC+B,YAAY,EAAEJ,YAAY,CAACuB,OAAO,CAAC,QAAQ;MAAC,CAAC,CAAC;MACvGzB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBG,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAAC;MACzDH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAACK,IAAI,CAACE,YAAY,CAAC;MAC1D,IAAI,CAACpB,OAAO,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOsB,CAAC,EAAE;MAAA,IAAAkB,YAAA,EAAAC,iBAAA;MACR3B,OAAO,CAACC,GAAG,EAAAyB,YAAA,GAAClB,CAAC,CAACT,QAAQ,cAAA2B,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYtB,IAAI,cAAAuB,iBAAA,uBAAhBA,iBAAA,CAAkBpC,OAAO,CAAC;IAC1C,CAAC,SAAS;MACN,IAAI,CAACF,UAAU,CAAC,KAAK,CAAC;IAC1B;EACJ;EAEAuC,UAAUA,CAAA,EAAG;IACT5B,OAAO,CAACC,GAAG,CAACC,YAAY,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;IACzC,MAAMI,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC7B,YAAY,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;IAE/D,IAAI,CAACrC,OAAO,CAACyC,cAAc,CAAC;IAC5B,IAAI,CAAC3C,OAAO,CAAC,IAAI,CAAC;IAElB,OAAO4C,IAAI,CAACC,KAAK,CAAC7B,YAAY,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD;EAEA,MAAMO,UAAUA,CAACzB,EAAE,EAAE;IACjB,IAAI;MACA,MAAMF,WAAW,GAAGH,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAM1B,QAAQ,GAAG,MAAMzB,KAAK,CAAC2D,GAAG,CAAC,GAAGzD,QAAQ,eAAe+B,EAAE,EAAE,EAAE;QAC7D2B,OAAO,EAAE;UACLC,aAAa,EAAE,UAAU9B,WAAW;QACxC;MACJ,CAAC,CAAC;MACF,IAAI,CAACZ,eAAe,CAAC,IAAI,CAAC;MAC1B,IAAI,CAACD,gBAAgB,CAACO,QAAQ,CAACK,IAAI,CAAC;IAExC,CAAC,CAAC,OAAOI,CAAC,EAAE;MAAA,IAAA4B,YAAA,EAAAC,iBAAA;MACRrC,OAAO,CAACC,GAAG,CAAC,EAAAmC,YAAA,GAAA5B,CAAC,CAACT,QAAQ,cAAAqC,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYhC,IAAI,cAAAiC,iBAAA,uBAAhBA,iBAAA,CAAkB9C,OAAO,KAAI,uCAAuC,CAAC;IACrF;EACJ;EAEA,MAAM+C,YAAYA,CAAC/B,EAAE,EAAEgC,IAAI,EAAE;IACzB,IAAI;MACA,MAAMlC,WAAW,GAAGH,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAM1B,QAAQ,GAAG,MAAMzB,KAAK,CAACkD,IAAI,CAC7B,mBAAmB,EACnB;QACIgB,QAAQ,EAAED,IAAI,CAACE,IAAI;QACnBC,MAAM,EAAEH,IAAI,CAACI;MACjB,CAAC,EACD;QACIT,OAAO,EAAE;UACLC,aAAa,EAAE,UAAU9B,WAAW;QACxC;MACJ,CACJ,CAAC;MACD,IAAI,CAACZ,eAAe,CAAC,IAAI,CAAC;MAC1B,IAAI,CAACD,gBAAgB,CAACO,QAAQ,CAACK,IAAI,CAAC;MACpCJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACK,IAAI,CAAC;IAC3D,CAAC,CAAC,OAAOI,CAAC,EAAE;MAAA,IAAAoC,YAAA,EAAAC,iBAAA;MACR7C,OAAO,CAACC,GAAG,CAAC,EAAA2C,YAAA,GAAApC,CAAC,CAACT,QAAQ,cAAA6C,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYxC,IAAI,cAAAyC,iBAAA,uBAAhBA,iBAAA,CAAkBtD,OAAO,KAAI,uCAAuC,CAAC;IACrF;EACJ;EAEA,MAAMuD,WAAWA,CAACvC,EAAE,EAAE;IAClB,IAAI;MACA,MAAMF,WAAW,GAAGH,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAM1B,QAAQ,GAAG,MAAMzB,KAAK,CAAC2D,GAAG,CAAC,GAAGzD,QAAQ,IAAI+B,EAAE,EAAE,EAAE;QAClD2B,OAAO,EAAE;UACLC,aAAa,EAAE,UAAU9B,WAAW;QACxC;MACJ,CAAC,CAAC;MACF,IAAI,CAACjB,OAAO,CAACW,QAAQ,CAACK,IAAI,CAAC;MAC3BJ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACK,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOI,CAAC,EAAE;MAAA,IAAAuC,YAAA,EAAAC,iBAAA;MACRhD,OAAO,CAACC,GAAG,CAAC,EAAA8C,YAAA,GAAAvC,CAAC,CAACT,QAAQ,cAAAgD,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAY3C,IAAI,cAAA4C,iBAAA,uBAAhBA,iBAAA,CAAkBzD,OAAO,KAAI,uCAAuC,CAAC;IACrF;EACJ;EAEA,MAAM0D,YAAYA,CAAC1C,EAAE,EAAE2C,QAAQ,EAAE;IAC7B,IAAI;MACA,MAAM7C,WAAW,GAAGH,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAM1B,QAAQ,GAAG,MAAMzB,KAAK,CAACkD,IAAI,CAC7B,GAAGhD,QAAQ,SAAS+B,EAAE,EAAE,EACxB;QACIG,IAAI,EAAEwC,QAAQ,CAACxC,IAAI;QACnBb,QAAQ,EAAEqD,QAAQ,CAACrD,QAAQ;QAC3BsD,KAAK,EAAED,QAAQ,CAACC,KAAK;QACrBC,GAAG,EAAEC,QAAQ,CAACH,QAAQ,CAACE,GAAG,EAAE,EAAE,CAAC;QAC/BE,WAAW,EAAEJ,QAAQ,CAACI,WAAW;QACjCC,GAAG,EAAEL,QAAQ,CAACK;MAClB,CAAC,EACD;QACIrB,OAAO,EAAE;UACLC,aAAa,EAAE,UAAU9B,WAAW;QACxC;MACJ,CACJ,CAAC;MACD,IAAI,CAACjB,OAAO,CAACW,QAAQ,CAACK,IAAI,CAAC;MAC3BJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACK,IAAI,CAAC;IAC3D,CAAC,CAAC,OAAOI,CAAC,EAAE;MAAA,IAAAgD,YAAA,EAAAC,iBAAA;MACRzD,OAAO,CAACC,GAAG,CAAC,EAAAuD,YAAA,GAAAhD,CAAC,CAACT,QAAQ,cAAAyD,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYpD,IAAI,cAAAqD,iBAAA,uBAAhBA,iBAAA,CAAkBlE,OAAO,KAAI,uCAAuC,CAAC;IACrF;EACJ;EAGA,MAAMmE,kBAAkBA,CAACC,MAAM,EAAEC,WAAW,EAAE;IAC1C,IAAI;MACA5D,OAAO,CAACC,GAAG,CAACoD,QAAQ,CAACM,MAAM,EAAE,EAAE,CAAC,EAAEC,WAAW,CAAC;MAE9C,MAAMvD,WAAW,GAAGH,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;MAClD,MAAM1B,QAAQ,GAAG,MAAMzB,KAAK,CAACkD,IAAI,CAC7B,GAAGhD,QAAQ,mBAAmB,EAC9B;QAAEmF,MAAM,EAAEN,QAAQ,CAACM,MAAM,EAAE,EAAE,CAAC;QAAEC;MAAY,CAAC,EAC7C;QACI1B,OAAO,EAAE;UACLC,aAAa,EAAE,UAAU9B,WAAW;QACxC;MACJ,CACJ,CAAC;MAEDL,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACK,IAAI,CAAC;IAC3D,CAAC,CAAC,OAAOI,CAAC,EAAE;MAAA,IAAAqD,YAAA,EAAAC,iBAAA;MACR9D,OAAO,CAACC,GAAG,CAAC,EAAA4D,YAAA,GAAArD,CAAC,CAACT,QAAQ,cAAA8D,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYzD,IAAI,cAAA0D,iBAAA,uBAAhBA,iBAAA,CAAkBvE,OAAO,KAAI,uCAAuC,CAAC;IACrF;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}